{"ast":null,"code":"var _jsxFileName = \"/Users/vivekchowdary/My World/Authentication/src/components/StartingPage/StartingPageContent.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./StartingPageContent.module.css\";\nimport React, { useRef, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ContactList from \"./ContactList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartingPageContent = props => {\n  _s();\n\n  const [contactList, setContactList] = useState([]);\n  const nameRef = useRef(\"\");\n  const numberRef = useRef(\"\");\n  const emailRef = useRef(\"\");\n\n  const submitHandler = async (event, contact) => {\n    event.preventDefault();\n    const response = await fetch('https://contacts-46f9e-default-rtdb.firebaseio.com/contacts.json', {\n      method: 'POST',\n      body: JSON.stringify(contact),\n      headers: {\n        'Content-Type': 'a'\n      }\n    });\n    const enteredData = {\n      id: Math.random().toString(),\n      name: nameRef.current.value,\n      number: numberRef.current.value,\n      email: emailRef.current.value\n    };\n    const formIsValid = enteredData.name.trim().length > 0 && enteredData.number.length > 0 && enteredData.email.includes('@');\n\n    if (formIsValid) {\n      setContactList(prevData => {\n        return [enteredData, ...prevData];\n      });\n    }\n\n    nameRef.current.value = \"\";\n    numberRef.current.value = \"\";\n    emailRef.current.value = \"\";\n  };\n\n  let list = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Contacts Saved! May be add One.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 14\n  }, this);\n\n  if (contactList.length > 0) {\n    list = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: contactList.map(list => {\n        return /*#__PURE__*/_jsxDEV(ContactList, {\n          name: list.name,\n          number: list.number,\n          email: list.email\n        }, list.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  console.log(contactList);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Contact Form and Contact List Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Add Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.starting,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Contact Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          ref: nameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contact-number\",\n          children: \"Contact Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"number\",\n          ref: numberRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Contact Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"number\",\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartingPageContent, \"KlutztlLXTEHvjvq4B/llJGcGYs=\");\n\n_c = StartingPageContent;\nexport default StartingPageContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartingPageContent\");","map":{"version":3,"sources":["/Users/vivekchowdary/My World/Authentication/src/components/StartingPage/StartingPageContent.js"],"names":["classes","React","useRef","useState","Card","ContactList","StartingPageContent","props","contactList","setContactList","nameRef","numberRef","emailRef","submitHandler","event","contact","preventDefault","response","fetch","method","body","JSON","stringify","headers","enteredData","id","Math","random","toString","name","current","value","number","email","formIsValid","trim","length","includes","prevData","list","map","console","log","textAlign","starting","actions"],"mappings":"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","sourcesContent":["import classes from \"./StartingPageContent.module.css\";\nimport React, { useRef, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ContactList from \"./ContactList\";\n\nconst StartingPageContent = (props) => {\n  const [contactList, setContactList] = useState([]);\n\n  const nameRef = useRef(\"\");\n  const numberRef = useRef(\"\");\n  const emailRef = useRef(\"\");\n\n  const submitHandler = async (event, contact) => {\n    event.preventDefault();\n\n    const response = await fetch('https://contacts-46f9e-default-rtdb.firebaseio.com/contacts.json',\n    {\n      method: 'POST',\n      body: JSON.stringify(contact),\n      headers: {\n        'Content-Type': 'a'\n      }\n    })\n\n    const enteredData = {\n      id: Math.random().toString(),\n      name: nameRef.current.value,\n      number: numberRef.current.value,\n      email: emailRef.current.value,\n    };\n\n    const formIsValid = enteredData.name.trim().length > 0 && enteredData.number.length > 0 && enteredData.email.includes('@')\n\n    if (formIsValid) {\n      setContactList((prevData) => {\n        return [enteredData, ...prevData];\n      });\n    }\n\n    nameRef.current.value = \"\";\n    numberRef.current.value = \"\";\n    emailRef.current.value = \"\";\n  };\n\n  let list = <p>No Contacts Saved! May be add One.</p>;\n\n  if (contactList.length > 0) {\n    list = (\n      <ul className={classes.list}>\n        {contactList.map((list) => {\n          return (\n            <ContactList\n              key={list.id}\n              name={list.name}\n              number={list.number}\n              email={list.email}\n            />\n          );\n        })}\n      </ul>\n    );\n  }\n\n  console.log(contactList);\n\n  return (\n    <React.Fragment>\n      <h1 style={{ textAlign: \"center\" }}>\n        Contact Form and Contact List Page\n      </h1>\n      <form onSubmit={submitHandler}>\n        <h2 style={{ textAlign: \"center\" }}>Add Contacts</h2>\n        <div className={classes.starting}>\n          <label htmlFor=\"name\">Contact Name</label>\n          <input type=\"text\" id=\"name\" ref={nameRef} />\n          <label htmlFor=\"contact-number\">Contact Number</label>\n          <input type=\"number\" id=\"number\" ref={numberRef} />\n          <label htmlFor=\"email\">Contact Email</label>\n          <input type=\"email\" id=\"number\" ref={emailRef} />\n          <div className={classes.actions}>\n            <button type=\"submit\">Save</button>\n          </div>\n        </div>\n      </form>\n      <Card>{list}</Card>\n    </React.Fragment>\n  );\n};\n\nexport default StartingPageContent;\n"]},"metadata":{},"sourceType":"module"}